/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  WildlifeDAO,
  WildlifeDAOInterface,
} from "../../contracts/WildlifeDAO";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_wldToken",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "donor",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "usdAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "wldMinted",
        type: "uint256",
      },
    ],
    name: "DonationReceived",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_usdAmount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_recipient",
        type: "address",
      },
    ],
    name: "donate",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "exchangeRate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "totalValueLocked",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalWLD",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "wldToken",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052606460045534801561001557600080fd5b50604051610b9e380380610b9e83398181016040528101906100379190610228565b33600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036100aa5760006040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016100a19190610264565b60405180910390fd5b6100b98161010160201b60201c565b5080600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505061027f565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006101f5826101ca565b9050919050565b610205816101ea565b811461021057600080fd5b50565b600081519050610222816101fc565b92915050565b60006020828403121561023e5761023d6101c5565b5b600061024c84828501610213565b91505092915050565b61025e816101ea565b82525050565b60006020820190506102796000830184610255565b92915050565b6109108061028e6000396000f3fe60806040526004361061007b5760003560e01c80638da5cb5b1161004e5780638da5cb5b146101095780639be3783d14610134578063ec18154e1461015f578063f2fde38b1461018a5761007b565b80630b5367ad146100805780633ba0b9a9146100ab578063715018a6146100d65780638004f9fa146100ed575b600080fd5b34801561008c57600080fd5b506100956101b3565b6040516100a29190610585565b60405180910390f35b3480156100b757600080fd5b506100c06101b9565b6040516100cd9190610585565b60405180910390f35b3480156100e257600080fd5b506100eb6101bf565b005b6101076004803603810190610102919061062f565b6101d3565b005b34801561011557600080fd5b5061011e61033e565b60405161012b919061067e565b60405180910390f35b34801561014057600080fd5b50610149610367565b60405161015691906106f8565b60405180910390f35b34801561016b57600080fd5b5061017461038d565b6040516101819190610585565b60405180910390f35b34801561019657600080fd5b506101b160048036038101906101ac9190610713565b610393565b005b60035481565b60045481565b6101c7610419565b6101d160006104a0565b565b60008211610216576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161020d906107c3565b60405180910390fd5b6000600454836102269190610812565b9050826002600082825461023a9190610854565b9250508190555080600360008282546102539190610854565b92505081905550600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663838892ec83836040518363ffffffff1660e01b81526004016102b7929190610888565b600060405180830381600087803b1580156102d157600080fd5b505af11580156102e5573d6000803e3d6000fd5b505050508173ffffffffffffffffffffffffffffffffffffffff167f4b0304ab2f313234b1cea012339c8f8c3bf2c8bb357d81a579cfdb35d2e3d03084836040516103319291906108b1565b60405180910390a2505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60025481565b61039b610419565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361040d5760006040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610404919061067e565b60405180910390fd5b610416816104a0565b50565b610421610564565b73ffffffffffffffffffffffffffffffffffffffff1661043f61033e565b73ffffffffffffffffffffffffffffffffffffffff161461049e57610462610564565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610495919061067e565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b6000819050919050565b61057f8161056c565b82525050565b600060208201905061059a6000830184610576565b92915050565b600080fd5b6105ae8161056c565b81146105b957600080fd5b50565b6000813590506105cb816105a5565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006105fc826105d1565b9050919050565b61060c816105f1565b811461061757600080fd5b50565b60008135905061062981610603565b92915050565b60008060408385031215610646576106456105a0565b5b6000610654858286016105bc565b92505060206106658582860161061a565b9150509250929050565b610678816105f1565b82525050565b6000602082019050610693600083018461066f565b92915050565b6000819050919050565b60006106be6106b96106b4846105d1565b610699565b6105d1565b9050919050565b60006106d0826106a3565b9050919050565b60006106e2826106c5565b9050919050565b6106f2816106d7565b82525050565b600060208201905061070d60008301846106e9565b92915050565b600060208284031215610729576107286105a0565b5b60006107378482850161061a565b91505092915050565b600082825260208201905092915050565b7f446f6e6174696f6e206d7573742062652067726561746572207468616e207a6560008201527f726f000000000000000000000000000000000000000000000000000000000000602082015250565b60006107ad602283610740565b91506107b882610751565b604082019050919050565b600060208201905081810360008301526107dc816107a0565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061081d8261056c565b91506108288361056c565b92508282026108368161056c565b9150828204841483151761084d5761084c6107e3565b5b5092915050565b600061085f8261056c565b915061086a8361056c565b9250828201905080821115610882576108816107e3565b5b92915050565b600060408201905061089d600083018561066f565b6108aa6020830184610576565b9392505050565b60006040820190506108c66000830185610576565b6108d36020830184610576565b939250505056fea264697066735822122080a40a88f9fc4c9c9078e64cc686fde9c3e019bb52ae3bffdb6cf267139f3ebe64736f6c63430008140033";

type WildlifeDAOConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: WildlifeDAOConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class WildlifeDAO__factory extends ContractFactory {
  constructor(...args: WildlifeDAOConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _wldToken: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_wldToken, overrides || {});
  }
  override deploy(
    _wldToken: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_wldToken, overrides || {}) as Promise<
      WildlifeDAO & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): WildlifeDAO__factory {
    return super.connect(runner) as WildlifeDAO__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): WildlifeDAOInterface {
    return new Interface(_abi) as WildlifeDAOInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): WildlifeDAO {
    return new Contract(address, _abi, runner) as unknown as WildlifeDAO;
  }
}
