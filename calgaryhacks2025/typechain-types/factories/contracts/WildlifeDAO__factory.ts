/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  WildlifeDAO,
  WildlifeDAOInterface,
} from "../../contracts/WildlifeDAO";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_wldToken",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "donor",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "usdAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "wldMinted",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "daoFeeAmount",
        type: "uint256",
      },
    ],
    name: "DonationReceived",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "projectId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "enum WildlifeDAO.ProjectStatus",
        name: "oldStatus",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "enum WildlifeDAO.ProjectStatus",
        name: "newStatus",
        type: "uint8",
      },
    ],
    name: "ProjectStatusChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "projectId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "submitter",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "title",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "fundingRequired",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "enum WildlifeDAO.ProjectStatus",
        name: "status",
        type: "uint8",
      },
    ],
    name: "ProposalSubmitted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "projectId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "currentTime",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "submissionTime",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "validationPeriod",
        type: "uint256",
      },
    ],
    name: "ValidationCheck",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "projectId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "voter",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "support",
        type: "bool",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "votingPower",
        type: "uint256",
      },
    ],
    name: "VoteCast",
    type: "event",
  },
  {
    inputs: [],
    name: "AUTO_VALIDATION_PERIOD",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "DAO_FEE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MAX_DONATION",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MIN_DONATION",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MIN_VOTE_POWER",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "VOTE_COST",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "VOTING_PERIOD",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "validator",
        type: "address",
      },
    ],
    name: "addValidator",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_usdAmount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_recipient",
        type: "address",
      },
    ],
    name: "donate",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "exchangeRate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "projectId",
        type: "uint256",
      },
    ],
    name: "getProjectStatus",
    outputs: [
      {
        internalType: "enum WildlifeDAO.ProjectStatus",
        name: "status",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "submissionTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "votingStartTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "votingEndTime",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "projectId",
        type: "uint256",
      },
    ],
    name: "getProjectVotes",
    outputs: [
      {
        internalType: "uint256",
        name: "forVotes",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "againstVotes",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "votingEndTime",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "minValidationsRequired",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "projectCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "projects",
    outputs: [
      {
        internalType: "string",
        name: "title",
        type: "string",
      },
      {
        internalType: "string",
        name: "description",
        type: "string",
      },
      {
        internalType: "address",
        name: "proposer",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "fundingRequired",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "fundingReceived",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "validationCount",
        type: "uint256",
      },
      {
        internalType: "enum WildlifeDAO.ProjectStatus",
        name: "status",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "submissionTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "forVotes",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "againstVotes",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "votingStartTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "votingEndTime",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "executed",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    name: "proposalIdToProjectId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "validator",
        type: "address",
      },
    ],
    name: "removeValidator",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "proposalId",
        type: "string",
      },
      {
        internalType: "string",
        name: "title",
        type: "string",
      },
      {
        internalType: "string",
        name: "description",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "fundingRequired",
        type: "uint256",
      },
    ],
    name: "submitProject",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "totalValueLocked",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalWLD",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "validators",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "projectId",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "support",
        type: "bool",
      },
    ],
    name: "voteOnProject",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "wldToken",
    outputs: [
      {
        internalType: "contract WildlifeDAOToken",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60803461013357601f6116c338819003918201601f19168301916001600160401b038311848410176101385780849260209460405283398101031261013357516001600160a01b03908181169081900361013357331561011a57600090815460018060a01b03199033828216178455604051943391167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08580a36001600455600260065581156100d857604093506001541617600155338152600560205220600160ff19825416179055604051611574908161014f8239f35b62461bcd60e51b845260206004850152601560248501527f496e76616c696420746f6b656e206164647265737300000000000000000000006044850152606484fd5b604051631e4fbdf760e01b815260006004820152602490fd5b600080fd5b634e487b7160e01b600052604160045260246000fdfe608080604052600436101561001357600080fd5b600090813560e01c9081630b5367ad146112ca57508063107046bd146111d35780631e484e70146111af5780632763b72a14610d0b57806336fbad2614610ced5780633ba0b9a914610ccf57806340a141ff14610c425780634339e612146107fd5780634857317e146107e05780634d238c8e1461074d5780635006e8541461072f578063715018a6146106d55780638004f9fa1461041f5780638da5cb5b146103f85780639675c0091461039e5780639acbbf22146103825780639be3783d14610359578063b1610d7e1461033b578063b7b5bfc1146102dd578063db45810e146102c1578063e9e6a349146102a4578063ec18154e14610286578063f2fde38b146101f6578063fa52c7d8146101b7578063fdfda408146101645763fe71b8ba1461013f57600080fd5b346101615780600319360112610161576020604051678ac7230489e800008152f35b80fd5b5034610161576020366003190112610161576040906004358152600760205220600b8101546101b3600e600c840154930154604051938493846040919493926060820195825260208201520152565b0390f35b50346101615760203660031901126101615760209060ff906040906001600160a01b036101e26114d9565b168152600584522054166040519015158152f35b5034610161576020366003190112610161576102106114d9565b6102186114ef565b6001600160a01b0390811690811561026d57600054826bffffffffffffffffffffffff60a01b821617600055167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a380f35b604051631e4fbdf760e01b815260048101849052602490fd5b50346101615780600319360112610161576020600254604051908152f35b503461016157806003193601126101615760206040516101f48152f35b5034610161578060031936011261016157602060405160018152f35b5034610161576020366003190112610161576004359067ffffffffffffffff821161016157602061032881610315366004870161147d565b8160405193828580945193849201611412565b8101600981520301902054604051908152f35b5034610161578060031936011261016157602060405162093a808152f35b50346101615780600319360112610161576001546040516001600160a01b039091168152602090f35b50346101615780600319360112610161576020604051603c8152f35b5034610161576020366003190112610161576040608091600435815260076020522060ff60068201541690600781015490600e600d820154910154916103e7604051809561145a565b602084015260408301526060820152f35b5034610161578060031936011261016157546040516001600160a01b039091168152602090f35b5060403660031901126101615760043560248035906001600160a01b038083168084036106d15760018510610698576103e8851161065f571561062757670de0b6b3a76400009283850293858504148515171561061457681b1ae4d6e2ef50000085028481046101f4148515171561060157612710900492838503908582116105ef575086906104b18760025461151b565b6002556104c08660035461151b565b600355836001541690813b156105eb576040516320e224bb60e21b8082526001600160a01b03959095166004820152602481019190915291908290604490829084905af180156105e0576105cb575b509085918361055a575b5050604080519485526020850193909352509082015233907f3168ca6b1e292883c0668008556fb887f7cce92bcd3c1c57c15a34dcdccd589290606090a280f35b81600154169183541690823b156105bc576040519081526001600160a01b03919091166004820152602481018490529082908290604490829084905af180156105c0576105a8575b80610519565b6105b190611320565b6105bc5783386105a2565b8380fd5b6040513d84823e3d90fd5b6105d89096919296611320565b94903861050f565b6040513d89823e3d90fd5b8280fd5b634e487b7160e01b8852601160045287fd5b634e487b7160e01b875260116004528387fd5b634e487b7160e01b865260116004528286fd5b60405162461bcd60e51b81526020600482015260118184015270125b9d985b1a59081c9958da5c1a595b9d607a1b6044820152606490fd5b60405162461bcd60e51b81526020600482015260128185015271446f6e6174696f6e20746f6f206c6172676560701b6044820152606490fd5b60405162461bcd60e51b81526020600482015260128185015271111bdb985d1a5bdb881d1bdbc81cdb585b1b60721b6044820152606490fd5b8580fd5b50346101615780600319360112610161576106ee6114ef565b80546001600160a01b03198116825581906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b50346101615780600319360112610161576020600654604051908152f35b5034610161576020366003190112610161576107676114d9565b61076f6114ef565b6001600160a01b03168082526005602052604082205460ff166107a5578152600560205260408120805460ff1916600117905580f35b60405162461bcd60e51b815260206004820152601360248201527220b63932b0b23c9030903b30b634b230ba37b960691b6044820152606490fd5b503461016157806003193601126101615760206040516103e88152f35b5034610161576040366003190112610161576004356024803590811515808303610c3e57838552602092600784526040862060ff6006820154166005811015610c2b57600203610be757600e8101544211610bad57600a81019133885282865260ff604089205416610b79576001546040516370a0823160e01b8152336004820152906001600160a01b031687828881845afa918215610afb578a92610b4a575b5068056bc75e2d631000008210610b06579087600492604051938480926318160ddd60e01b82525afa918215610afb578a92610ac8575b5061271090818102918183041490151715610ab5578115610aa2570492604051906060820182811067ffffffffffffffff821117610a8f5788610967939261094b60408e600295825260018752848701938b8552828801958d8752338352522094511515859060ff801983541691151516179055565b51600184015551151591019060ff801983541691151516179055565b15610a7a57600b0161097a82825461151b565b90555b60405191825283820152837fcbdf6214089cba887ecbf35a0b6a734589959c9763342c756bb2a80ca2bc9f6e60403393a3828452600782526040842090600e82015442116109c9578480f35b600b820154600c83015490610bb86109e1838361151b565b10156109ee575b50508480f35b1115610a705760066004925b01937ff75c354d0772e6386c514de8e03be6b7fb27fe941335caa779ee1b9f34fe0c1e6040865495610a3d825191610a358360ff8b1661145a565b82018761145a565ba26005821015610a5e575060ff169060ff19161790553880808080806109e8565b634e487b7160e01b8552602160045284fd5b60066003926109fa565b600c01610a8882825461151b565b905561097d565b634e487b7160e01b8b526041600452878bfd5b634e487b7160e01b8a526012600452868afd5b634e487b7160e01b8a526011600452868afd5b9091508781813d8311610af4575b610ae0818361134a565b81010312610af0575190386108d5565b8980fd5b503d610ad6565b6040513d8c823e3d90fd5b60405162461bcd60e51b8152600481018990526019818901527f496e73756666696369656e7420766f74696e6720706f776572000000000000006044820152606490fd5b9091508781813d8311610b72575b610b62818361134a565b81010312610af05751903861089e565b503d610b58565b60405162461bcd60e51b815260048101879052600d818701526c105b1c9958591e481d9bdd1959609a1b6044820152606490fd5b60405162461bcd60e51b81526004810186905260138186015272159bdd1a5b99c81c195c9a5bd908195b991959606a1b6044820152606490fd5b60405162461bcd60e51b815260048101869052601b818601527f50726f6a656374206e6f7420696e20766f74696e6720706861736500000000006044820152606490fd5b634e487b7160e01b885260216004528488fd5b8480fd5b503461016157602036600319011261016157610c5c6114d9565b610c646114ef565b6001600160a01b03168082526005602052604082205460ff1615610c98578152600560205260408120805460ff1916905580f35b60405162461bcd60e51b815260206004820152600f60248201526e2737ba1030903b30b634b230ba37b960891b6044820152606490fd5b50346101615780600319360112610161576020600454604051908152f35b50346101615780600319360112610161576020600854604051908152f35b50346101615760803660031901126101615760043567ffffffffffffffff81116111ab57610d3d90369060040161147d565b60243567ffffffffffffffff81116105eb57610d5d90369060040161147d565b9160443567ffffffffffffffff81116111ab57610d7e90369060040161147d565b92825115611170576040516020818551610d9b8183858a01611412565b810160098152030190205461112b57600854926000198414611117576001840160085560018401835260076020526040832094825167ffffffffffffffff811161105557610de987546112e6565b601f81116110d6575b50806020601f8211600114611074578691611069575b508160011b916000199060031b1c19161786555b80519067ffffffffffffffff8211611055578190610e3d60018901546112e6565b601f8111611005575b50602090601f8311600114610f9b578692610f90575b50508160011b916000199060031b1c19161760018601555b6064359081600387015560028601336bffffffffffffffffffffffff60a01b82541617905560068601600260ff1982541617905542600787015542600d87015562093a804201804211610f7c57600e602097015585610edc6040519283815193849201611412565b81019060098252868160018801930301902055610f0460405192606084526060840190611435565b9085830152600260408301527f50094398b94bd032f2883f60fcf80bc2d2f633c5bcaf147bb1bc23cb6d48ee7033928060018701930390a36040519081526002838201527ff75c354d0772e6386c514de8e03be6b7fb27fe941335caa779ee1b9f34fe0c1e60406001840192a2600160405191018152f35b634e487b7160e01b85526011600452602485fd5b015190503880610e5c565b600189018752602087209250601f198416875b818110610fed5750908460019594939210610fd4575b505050811b016001860155610e74565b015160001960f88460031b161c19169055388080610fc4565b92936020600181928786015181550195019301610fae565b90915060018801865260208620601f840160051c81016020851061104e575b90849392915b601f830160051c82018110611040575050610e46565b88815585945060010161102a565b5080611024565b634e487b7160e01b85526041600452602485fd5b905084015138610e08565b888752602087209150601f198316875b8181106110be575090836001949392106110a5575b5050811b018655610e1c565b86015160001960f88460031b161c191690553880611099565b9192602060018192868b015181550194019201611084565b87865260208620601f830160051c810160208410611110575b601f830160051c82018110611105575050610df2565b8781556001016110ef565b50806110ef565b634e487b7160e01b83526011600452602483fd5b60405162461bcd60e51b815260206004820152601a60248201527f50726f706f73616c20494420616c7265616479206578697374730000000000006044820152606490fd5b60405162461bcd60e51b8152602060048201526013602482015272125b9d985b1a59081c1c9bdc1bdcd85b081251606a1b6044820152606490fd5b5080fd5b5034610161578060031936011261016157602060405168056bc75e2d631000008152f35b50346101615760203660031901126101615760043581526007602052604090206111fc8161136c565b6112086001830161136c565b91600160a01b600190036002820154169060038101549060048101546005820154600683015460ff166007840154600b85015491600c86015493600d87015495600e88015497600f015460ff16986040519c8d9c8d6101a0908181520161126e91611435565b8d810360208f015261127f91611435565b9a60408d015260608c015260808b015260a08a015260c089016112a19161145a565b60e088015261010087015261012086015261014085015261016084015215156101808301520390f35b9050346111ab57816003193601126111ab576020906003548152f35b90600182811c92168015611316575b602083101461130057565b634e487b7160e01b600052602260045260246000fd5b91607f16916112f5565b67ffffffffffffffff811161133457604052565b634e487b7160e01b600052604160045260246000fd5b90601f8019910116810190811067ffffffffffffffff82111761133457604052565b9060405191826000825492611380846112e6565b9081845260019485811690816000146113ef57506001146113ac575b50506113aa9250038361134a565b565b9093915060005260209081600020936000915b8183106113d75750506113aa9350820101388061139c565b855488840185015294850194879450918301916113bf565b9150506113aa94506020925060ff191682840152151560051b820101388061139c565b60005b8381106114255750506000910152565b8181015183820152602001611415565b9060209161144e81518092818552858086019101611412565b601f01601f1916010190565b9060058210156114675752565b634e487b7160e01b600052602160045260246000fd5b81601f820112156114d45780359067ffffffffffffffff821161133457604051926114b2601f8401601f19166020018561134a565b828452602083830101116114d457816000926020809301838601378301015290565b600080fd5b600435906001600160a01b03821682036114d457565b6000546001600160a01b0316330361150357565b60405163118cdaa760e01b8152336004820152602490fd5b9190820180921161152857565b634e487b7160e01b600052601160045260246000fdfea264697066735822122091a58ae47dd7dee95288e3fc27bc804d9cd18a2436aa943df68b284d6aac3af464736f6c63430008140033";

type WildlifeDAOConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: WildlifeDAOConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class WildlifeDAO__factory extends ContractFactory {
  constructor(...args: WildlifeDAOConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _wldToken: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_wldToken, overrides || {});
  }
  override deploy(
    _wldToken: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_wldToken, overrides || {}) as Promise<
      WildlifeDAO & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): WildlifeDAO__factory {
    return super.connect(runner) as WildlifeDAO__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): WildlifeDAOInterface {
    return new Interface(_abi) as WildlifeDAOInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): WildlifeDAO {
    return new Contract(address, _abi, runner) as unknown as WildlifeDAO;
  }
}
